
input_map = """forward 8
forward 1
down 9
down 8
down 5
forward 4
up 9
forward 7
forward 2
down 6
forward 7
forward 5
forward 8
down 7
up 8
forward 1
forward 6
down 8
up 3
forward 3
down 3
down 7
forward 5
down 1
down 9
forward 4
up 7
forward 9
forward 1
down 6
down 5
down 4
forward 9
forward 1
forward 4
up 3
up 6
forward 1
forward 9
forward 4
down 1
down 9
forward 7
forward 8
down 8
down 8
down 4
down 5
up 3
forward 4
down 1
forward 2
forward 1
forward 8
up 2
forward 5
forward 4
forward 5
forward 8
down 4
down 5
down 8
down 7
down 6
forward 4
up 8
forward 6
down 2
down 7
up 7
down 2
down 6
forward 5
forward 2
forward 8
down 5
down 6
down 6
up 7
down 7
forward 8
down 7
down 7
down 2
down 2
forward 3
up 5
down 3
up 3
down 4
up 9
down 1
up 1
forward 3
up 3
forward 9
up 6
down 3
down 6
forward 4
forward 5
forward 8
down 6
down 9
down 4
down 5
forward 7
down 3
forward 8
forward 3
up 9
forward 5
forward 8
forward 1
down 4
up 2
forward 1
down 1
forward 5
down 8
down 2
forward 3
forward 2
forward 1
down 7
forward 1
down 4
forward 7
forward 5
down 8
down 2
up 4
up 8
forward 6
up 2
down 8
up 9
forward 3
up 5
down 3
down 5
up 6
forward 3
up 9
down 4
forward 8
up 3
forward 6
forward 7
forward 8
forward 6
down 9
forward 4
up 8
forward 3
forward 3
forward 6
down 3
forward 5
down 4
down 4
up 4
down 8
down 4
down 1
down 7
down 7
up 9
down 7
forward 2
down 1
down 8
forward 8
forward 4
forward 6
forward 8
forward 6
forward 8
forward 7
forward 6
up 7
down 6
down 9
down 2
down 8
down 4
up 6
up 8
forward 3
down 7
down 3
forward 3
forward 3
down 4
down 1
up 3
forward 3
down 5
up 6
down 6
forward 1
down 3
down 6
down 9
down 3
forward 8
down 1
forward 7
forward 1
forward 3
up 3
down 8
forward 4
down 4
down 4
down 8
down 5
down 8
forward 6
forward 7
down 9
forward 2
up 9
down 5
forward 2
down 5
down 8
forward 1
forward 6
forward 2
forward 6
down 7
up 7
down 7
forward 7
up 8
forward 9
down 5
up 6
up 6
forward 3
down 5
forward 1
down 4
down 4
down 1
up 6
down 8
down 9
down 2
up 2
up 7
forward 5
down 5
up 2
forward 2
up 1
forward 2
up 4
up 7
forward 2
down 4
down 1
forward 4
up 6
forward 1
up 7
down 8
down 5
down 1
up 7
down 5
forward 4
forward 2
down 2
down 6
forward 1
forward 2
up 6
down 1
forward 2
down 5
down 9
down 6
up 8
forward 3
down 6
up 3
down 8
down 8
forward 2
forward 1
forward 7
forward 8
forward 2
forward 5
down 6
down 3
forward 5
up 8
forward 6
up 9
forward 7
up 3
down 7
down 3
up 8
down 5
forward 3
down 1
forward 1
forward 2
down 7
down 6
down 9
forward 3
down 7
down 7
down 5
forward 4
down 4
forward 5
forward 1
forward 4
down 8
up 4
down 6
down 8
up 1
forward 7
up 3
forward 6
forward 8
forward 9
forward 2
up 6
forward 7
forward 3
up 3
up 6
down 8
up 4
forward 9
down 9
up 3
up 3
down 4
up 3
down 2
down 4
up 9
down 1
forward 6
forward 3
down 3
forward 4
forward 3
forward 8
forward 1
down 1
up 4
up 9
down 8
forward 3
forward 2
down 4
down 1
forward 8
down 8
up 8
up 7
down 4
forward 6
up 5
down 1
down 3
down 9
forward 3
forward 9
down 1
down 6
forward 8
up 1
down 9
down 3
forward 5
forward 9
forward 8
up 7
down 2
down 5
forward 6
down 9
down 4
down 7
down 4
forward 7
down 8
up 8
forward 2
up 3
down 4
forward 2
forward 4
up 4
forward 4
forward 9
down 9
up 1
forward 1
down 8
up 7
up 9
down 8
down 7
forward 9
forward 1
up 3
forward 8
forward 6
forward 5
up 2
forward 8
up 7
down 8
down 2
up 9
down 7
forward 5
forward 4
down 9
forward 4
forward 5
up 1
down 8
down 8
down 4
forward 3
down 1
up 7
down 8
forward 4
down 5
forward 1
down 9
forward 9
up 7
up 1
down 3
forward 3
down 8
forward 9
down 3
up 7
forward 1
up 8
up 2
up 1
forward 8
down 3
forward 5
up 3
forward 6
forward 9
forward 2
forward 6
down 5
forward 2
down 7
up 6
forward 8
forward 6
down 3
forward 8
down 1
forward 2
down 9
up 5
down 6
up 4
forward 6
forward 5
forward 2
forward 9
forward 8
up 4
forward 4
forward 9
forward 4
forward 7
up 6
down 5
forward 8
down 8
up 3
down 4
up 8
up 5
forward 3
down 8
down 9
down 1
forward 7
down 8
up 4
down 8
up 4
down 5
forward 1
forward 3
down 6
down 5
forward 4
up 2
down 7
down 3
up 9
forward 5
forward 3
forward 2
up 2
down 9
up 1
down 2
forward 3
forward 8
forward 5
down 2
down 2
up 3
down 8
forward 4
forward 6
forward 5
up 9
down 7
up 7
up 2
down 2
up 4
forward 2
forward 2
down 7
forward 5
down 2
up 7
forward 6
forward 5
down 1
forward 8
forward 3
forward 2
up 3
down 1
forward 6
forward 5
forward 9
down 5
up 3
down 1
down 5
forward 1
down 1
down 1
forward 6
up 8
forward 9
up 5
up 5
forward 9
forward 3
forward 4
down 8
forward 9
forward 9
up 2
down 6
down 2
forward 1
down 7
up 4
forward 3
down 6
forward 5
down 6
up 5
forward 6
up 6
forward 7
forward 5
forward 1
down 9
forward 7
forward 4
forward 1
forward 6
up 7
forward 6
down 3
forward 4
down 1
down 9
down 8
forward 7
down 7
up 5
forward 1
forward 4
forward 8
forward 6
forward 2
forward 4
forward 2
forward 6
forward 5
down 4
down 3
forward 6
forward 3
up 6
down 3
down 2
forward 1
down 9
up 1
forward 8
forward 1
forward 1
forward 4
down 5
forward 7
forward 5
up 5
up 7
forward 7
forward 5
down 3
down 2
down 7
forward 7
forward 4
down 9
forward 2
down 6
forward 3
up 6
down 8
down 7
down 6
down 7
up 5
up 9
down 4
up 6
forward 1
forward 2
forward 4
up 5
down 2
down 3
forward 9
down 9
down 3
forward 5
forward 3
down 1
up 7
forward 7
forward 5
down 8
up 6
down 7
forward 5
up 7
up 6
forward 2
forward 6
down 1
up 8
down 9
down 1
forward 9
up 9
down 2
forward 6
up 3
down 1
up 9
down 6
up 2
up 6
forward 9
forward 8
up 7
forward 6
up 3
up 4
down 6
forward 1
forward 9
down 9
down 6
forward 1
forward 2
up 3
down 4
down 9
down 3
down 2
forward 7
down 9
forward 9
forward 5
down 9
forward 1
forward 6
down 6
up 8
up 8
up 3
forward 7
forward 7
forward 8
down 5
forward 3
down 4
down 6
forward 1
down 1
forward 7
forward 2
down 7
down 1
up 6
forward 3
down 6
forward 2
down 6
forward 8
down 4
up 8
forward 9
up 5
forward 3
down 6
forward 4
forward 4
down 8
up 5
up 9
down 8
forward 1
down 6
down 3
forward 1
down 4
up 6
down 6
down 6
down 5
forward 5
forward 6
down 1
down 9
down 4
up 7
down 2
forward 5
down 8
down 8
down 6
down 1
up 8
down 1
down 4
forward 6
down 3
down 6
up 4
down 6
up 7
down 3
forward 2
up 3
forward 7
up 7
up 4
forward 5
down 9
down 2
down 9
up 6
forward 9
forward 3
down 1
forward 7
forward 2
down 5
forward 3
forward 7
forward 4
forward 7
forward 6
forward 3
down 6
forward 3
down 1
up 6
up 9
down 1
forward 1
down 1
up 7
forward 8
forward 4
up 4
forward 7
down 3
up 8
up 1
down 6
forward 8
forward 7
up 7
down 4
down 4
down 8
up 3
forward 5
down 4
forward 9
forward 6
forward 6
forward 7
down 6
down 3
forward 2
up 8
forward 1
down 9
up 7
down 3
down 3
up 5
up 4
up 8
forward 2
down 5
forward 7
up 8
up 6
forward 5
down 5
forward 2
down 6
forward 7
down 6
forward 5
forward 3
forward 9
down 7
forward 7
forward 7
forward 7
forward 1
forward 2
forward 2
down 6
down 8
forward 3
down 9
down 5
up 5
forward 3
forward 9
down 7
down 9
down 9
down 9
forward 6
down 1
forward 6
forward 8
forward 8
down 4
forward 8
down 9
forward 6
down 2
down 1
down 5
forward 5
forward 8
forward 7
forward 7
forward 8
down 5
forward 3
up 5
forward 5
down 9
up 8
down 2
forward 8
forward 5
up 5
forward 4
down 3
forward 4
up 3
forward 1
forward 8
forward 3
down 2
up 8
forward 2
down 8
forward 3
up 2
up 1
down 9
down 8
forward 1
forward 1
down 8
forward 9
up 2
forward 4
forward 2
up 2
down 8
down 1
forward 1
forward 3
forward 6
up 6
down 2
up 1
down 3
forward 3
up 5
down 9
down 7
forward 8
up 5
up 4
forward 8
forward 5
down 8
up 8
forward 7
up 8
down 6
down 2
down 3
forward 9
down 4
down 2
down 1
up 2
up 4
forward 3
forward 1
forward 9
forward 1
down 7
up 7
forward 5
down 3
forward 3
down 4
down 1
up 5
down 8
down 2
forward 4
up 9
down 3
down 3
down 2
forward 7
down 2
forward 6
up 8
forward 5
forward 5
up 9
forward 8
forward 9
down 5
forward 5
down 3
forward 5
down 1
forward 6
forward 6
forward 1
forward 2
up 5
forward 9
"""

def AOC_problem_2_1(arr):

    # Preprocess the data
    if arr:
        arr = [tuple(i.split()) for i in arr.strip().split('\n')]


    # Filter out the forward directions and sum up the horizontal positions
    h_pos = sum([int(i[1]) for i in arr if i[0] == 'forward'])

    # Filter out the 'up' and 'down' directions and sum up the vetical positions
    y_pos = sum([int(i[1]) if i[0] == 'down' else  int(i[1]) * -1 for i in arr if i[0] in ['up','down']]) # multiplying by -1 to decrease

    # Return the product
    return h_pos * y_pos

def AOC_problem_2_2(arr):
    # Preprocess the data
    if arr:
        arr = [tuple(i.split()) for i in arr.strip().split('\n')]

    # Initialize aggregators
    aim = 0
    h_pos = 0
    y_pos = 0

    for i in arr:
        if i[0] == 'forward':
            h_pos+=int(i[1]) # Increase the h_pos
            y_pos+=int(i[1]) * aim # Increase the y_pos by product of aim and X
        else:
            if i[0] == 'up': 
                aim-=int(i[1]) # Decrease aim
            else: 
                aim+=int(i[1]) # Increase aim

            
    
    # Return the product
    return h_pos * y_pos



# Driver Code
print(AOC_problem_2_1(input_map))
print(AOC_problem_2_2(input_map))